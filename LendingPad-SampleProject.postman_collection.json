{
	"info": {
		"_postman_id": "c09a8a4b-e90c-4a6b-9174-184edc252038",
		"name": "LendingPad-SampleProject",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41762868"
	},
	"item": [
		{
			"name": "Initialize Sample Data",
			"item": [
				{
					"name": "Clear Users",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:49834/users/clear",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "49834",
							"path": [
								"users",
								"clear"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User - John",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"John Smith\",\r\n    \"email\": \"mark@companya.com\",\r\n    \"type\": 2,\r\n    \"age\": 27,\r\n    \"annualSalary\": 72000,\r\n    \"tags\": [\"A\", \"C\", \"D\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:49834/users/1422740e-6426-4c46-8445-3f5274a62424/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "49834",
							"path": [
								"users",
								"1422740e-6426-4c46-8445-3f5274a62424",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User - Mark",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Mark Williams\",\r\n    \"email\": \"mark@companya.com\",\r\n    \"type\": 1,\r\n    \"age\": 35,\r\n    \"annualSalary\": 120000,\r\n    \"tags\": [\"b\", \"c\", \"e\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:49834/users/9422740e-6426-4c46-8445-3f5274a62424/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "49834",
							"path": [
								"users",
								"9422740e-6426-4c46-8445-3f5274a62424",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User - Andy",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Andy\",\r\n    \"email\": \"andy@companya.com\",\r\n    \"type\": 2,\r\n    \"age\": 34,\r\n    \"annualSalary\": 86000,\r\n    \"tags\": [\"D\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:49834/users/8722740e-6426-4c46-8445-3f5274a62424/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "49834",
							"path": [
								"users",
								"8722740e-6426-4c46-8445-3f5274a62424",
								"create"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let userId = pm.request.url.path[1];\r",
									"\r",
									"pm.test(\"Status code is 409 (Conflict) as \" + userId + \" already exists\", function () {        \r",
									"    pm.response.to.have.status(409);    \r",
									"});\r",
									"\r",
									"// Email required validation test\r",
									"pm.test(\"User Id already exists\", function () {\r",
									"    var jsonData = pm.response.json();    \r",
									"    var errorsProp = jsonData.to.include(\"already exists\");\r",
									"});  "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "//The exception \"PUT attempted on document 'users/1422740e-6426-4c46-8445-3f5274a62424' using a non current etag\" means that the record with the same ID already exists.\r\n{\r\n    \"name\": \"Mary\",\r\n    \"email\": \"mary@companya.com\",\r\n    \"type\": 1,\r\n    \"age\": 29,\r\n    \"annualSalary\": 80000,\r\n    \"tags\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:49834/users/1422740e-6426-4c46-8445-3f5274a62424/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "49834",
							"path": [
								"users",
								"1422740e-6426-4c46-8445-3f5274a62424",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User - A",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 due to missing email\", function () {\r",
									"    pm.response.to.have.status(400);    \r",
									"    });\r",
									"\r",
									"// Test that the response contains validation errors for 'Email'\r",
									"pm.test(\"Response contains Email validation error\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    // Check that the 'errors' property exists\r",
									"    pm.expect(jsonData).to.have.property(\"model.Email\");\r",
									"    \r",
									"    // Check that the 'Email' error exists and contains a 'required' message\r",
									"    pm.expect(jsonData[\"model.Email\"]).to.have.property(\"errors\");\r",
									"    var errorsProp = jsonData[\"model.Email\"].errors;\r",
									"    pm.expect(errorsProp[0]).to.have.property(\"errorMessage\");\r",
									"    //pm.expect(jsonData.errors.Email[0]).to.include(\"required\");\r",
									"});    "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Mark Williams (updated)\",\r\n    \"email\": null,\r\n    \"type\": 2,\r\n    \"age\": 29,\r\n    \"annualSalary\": 80000,\r\n    \"tags\": [\"A\", \"C\", \"D\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:49834/users/9422740e-6426-4c46-8445-3f5274a62424/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "49834",
							"path": [
								"users",
								"9422740e-6426-4c46-8445-3f5274a62424",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User - B",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Mark Williams\",\r\n    \"email\": \"mark@companya.com\",\r\n    \"type\": 1,\r\n    \"age\": 29,\r\n    \"annualSalary\": null,\r\n    \"tags\": [\"A\", \"C\", \"D\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:49834/users/9422740e-6426-4c46-8445-3f5274a62424/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "49834",
							"path": [
								"users",
								"9422740e-6426-4c46-8445-3f5274a62424",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User - C",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Mark Williams\",\r\n    \"email\": \"mark@companya.com\",\r\n    \"type\": 1,\r\n    \"age\": 29,\r\n    \"annualSalary\": 152000,\r\n    \"tags\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:49834/users/9422740e-6426-4c46-8445-3f5274a62424/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "49834",
							"path": [
								"users",
								"9422740e-6426-4c46-8445-3f5274a62424",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users By Tag",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:49834/users/list/tag?tag=C",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "49834",
							"path": [
								"users",
								"list",
								"tag"
							],
							"query": [
								{
									"key": "tag",
									"value": "C"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Requests",
			"item": [
				{
					"name": "Products",
					"item": []
				},
				{
					"name": "Orders",
					"item": []
				}
			]
		}
	]
}