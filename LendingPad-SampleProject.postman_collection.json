{
	"info": {
		"_postman_id": "c09a8a4b-e90c-4a6b-9174-184edc252038",
		"name": "LendingPad-SampleProject",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41762868"
	},
	"item": [
		{
			"name": "Initialize Sample Data",
			"item": [
				{
					"name": "Clear Users",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:49834/users/clear",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "49834",
							"path": [
								"users",
								"clear"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User - John",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"John Smith\",\r\n    \"email\": \"mark@companya.com\",\r\n    \"type\": 2,\r\n    \"age\": 27,\r\n    \"annualSalary\": 72000,\r\n    \"tags\": [\"A\", \"C\", \"D\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:49834/users/1422740e-6426-4c46-8445-3f5274a62424/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "49834",
							"path": [
								"users",
								"1422740e-6426-4c46-8445-3f5274a62424",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User - Mark",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Mark Williams\",\r\n    \"email\": \"mark@companya.com\",\r\n    \"type\": 1,\r\n    \"age\": 35,\r\n    \"annualSalary\": 120000,\r\n    \"tags\": [\"b\", \"c\", \"e\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:49834/users/9422740e-6426-4c46-8445-3f5274a62424/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "49834",
							"path": [
								"users",
								"9422740e-6426-4c46-8445-3f5274a62424",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User - Andy",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Andy\",\r\n    \"email\": \"andy@companya.com\",\r\n    \"type\": 2,\r\n    \"age\": 34,\r\n    \"annualSalary\": 86000,\r\n    \"tags\": [\"D\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:49834/users/8722740e-6426-4c46-8445-3f5274a62424/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "49834",
							"path": [
								"users",
								"8722740e-6426-4c46-8445-3f5274a62424",
								"create"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let userId = pm.request.url.path[1];\r",
									"\r",
									"pm.test(\"Status code is 409 (Conflict) as \" + userId + \" already exists\", function () {        \r",
									"    pm.response.to.have.status(409);    \r",
									"});\r",
									"\r",
									"// Email required validation test\r",
									"pm.test(\"User Id already exists\", function () {\r",
									"    var jsonData = pm.response.json();    \r",
									"    var errorsProp = jsonData.to.include(\"already exists\");\r",
									"});  "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "//The exception \"PUT attempted on document 'users/1422740e-6426-4c46-8445-3f5274a62424' using a non current etag\" means that the record with the same ID already exists.\r\n{\r\n    \"name\": \"Mary\",\r\n    \"email\": \"mary@companya.com\",\r\n    \"type\": 1,\r\n    \"age\": 29,\r\n    \"annualSalary\": 80000,\r\n    \"tags\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:49834/users/1422740e-6426-4c46-8445-3f5274a62424/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "49834",
							"path": [
								"users",
								"1422740e-6426-4c46-8445-3f5274a62424",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User - A",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 due to missing email\", function () {\r",
									"    pm.response.to.have.status(400);    \r",
									"    });\r",
									"\r",
									"// Test that the response contains validation errors for 'Email'\r",
									"pm.test(\"Response contains Email validation error\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    \r",
									"    // Check that the 'errors' property exists\r",
									"    pm.expect(jsonData).to.have.property(\"model.Email\");\r",
									"    \r",
									"    // Check that the 'Email' error exists and contains a 'required' message\r",
									"    pm.expect(jsonData[\"model.Email\"]).to.have.property(\"errors\");\r",
									"    var errorsProp = jsonData[\"model.Email\"].errors;\r",
									"    pm.expect(errorsProp[0]).to.have.property(\"errorMessage\");\r",
									"    //pm.expect(jsonData.errors.Email[0]).to.include(\"required\");\r",
									"});    "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Mark Williams (updated)\",\r\n    \"email\": null,\r\n    \"type\": 2,\r\n    \"age\": 29,\r\n    \"annualSalary\": 80000,\r\n    \"tags\": [\"A\", \"C\", \"D\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:49834/users/9422740e-6426-4c46-8445-3f5274a62424/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "49834",
							"path": [
								"users",
								"9422740e-6426-4c46-8445-3f5274a62424",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User - B",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Mark Williams\",\r\n    \"email\": \"mark@companya.com\",\r\n    \"type\": 1,\r\n    \"age\": 29,\r\n    \"annualSalary\": null,\r\n    \"tags\": [\"A\", \"C\", \"D\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:49834/users/9422740e-6426-4c46-8445-3f5274a62424/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "49834",
							"path": [
								"users",
								"9422740e-6426-4c46-8445-3f5274a62424",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User - C",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Mark Williams\",\r\n    \"email\": \"mark@companya.com\",\r\n    \"type\": 1,\r\n    \"age\": 29,\r\n    \"annualSalary\": 152000,\r\n    \"tags\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:49834/users/9422740e-6426-4c46-8445-3f5274a62424/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "49834",
							"path": [
								"users",
								"9422740e-6426-4c46-8445-3f5274a62424",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users By Tag",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:49834/users/list/tag?tag=C",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "49834",
							"path": [
								"users",
								"list",
								"tag"
							],
							"query": [
								{
									"key": "tag",
									"value": "C"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Requests",
			"item": [
				{
					"name": "Products",
					"item": [
						{
							"name": "Create Product - 1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"let responseData = pm.response.json();\r",
											"pm.globals.set(\"newProductId1\", responseData.id);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "UserId",
										"value": "{{AdminIdForAuthorization}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"productName\": \"Samsung TV\",\r\n    \"productDescription\": \"65 inch Televisoion\",\r\n    \"price\": 550.75,\r\n    \"stockQuantity\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:49834/products/create",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "49834",
									"path": [
										"products",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Product - 2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"let responseData = pm.response.json();\r",
											"pm.globals.set(\"newProductId2\", responseData.id);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "UserId",
										"value": "{{AdminIdForAuthorization}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"productName\": \"Samsung Speakers\",\r\n    \"productDescription\": \"5.1 Surround Sound With Woofer\",\r\n    \"price\": 888.99,\r\n    \"stockQuantity\": 200\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:49834/products/create",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "49834",
									"path": [
										"products",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Product - 3 UnAuthorized",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"productName\": \"X Box S\",\r\n    \"productDescription\": \"Gamin Console from Microsoft\",\r\n    \"price\": 765.75,\r\n    \"stockQuantity\": 32\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:49834/products/create",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "49834",
									"path": [
										"products",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Product",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "UserId",
										"value": "{{AdminIdForAuthorization}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"productName\": \"Samsung QUHD TV \",\r\n    \"productDescription\": \"65 inch Televisoion\",\r\n    \"price\": 550.75,\r\n    \"stockQuantity\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:49834/products/{{newProductId1}}/update",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "49834",
									"path": [
										"products",
										"{{newProductId1}}",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product - 1 - By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200 or 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,404])\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"packages": {},
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:49834/products/{{newProductId1}}/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "49834",
									"path": [
										"products",
										"{{newProductId1}}",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product - 2 - By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200 or 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,404])\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:49834/products/{{newProductId2}}/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "49834",
									"path": [
										"products",
										"{{newProductId2}}",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "List All Products",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.have.status(200)\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:49834/products/list",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "49834",
									"path": [
										"products",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Product - 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200 or 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,404])\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "UserId",
										"value": "{{AdminIdForAuthorization}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:49834/products/{{newProductId1}}/delete",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "49834",
									"path": [
										"products",
										"{{newProductId1}}",
										"delete"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Product - 2 - UnAuthorized",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:49834/products/{{newProductId2}}/delete",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "49834",
									"path": [
										"products",
										"{{newProductId2}}",
										"delete"
									]
								}
							},
							"response": []
						},
						{
							"name": "Clear",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.have.status(200)\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "UserId",
										"value": "{{AdminIdForAuthorization}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:49834/products/clear",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "49834",
									"path": [
										"products",
										"clear"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Orders",
					"item": [
						{
							"name": "Order1",
							"item": [
								{
									"name": "Place Order - 1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseData = pm.response.json();\r",
													"pm.globals.set(\"newOrderId1\", responseData.orderId);\r",
													"pm.globals.set(\"newCustomerId1\", responseData.customerId)\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"customerName\": \"Vishal123\",\r\n    \"customerAddress\": \"Street City State 1234\",\r\n    \"customerEmail\": \"vishal123@company123.com\",\r\n    \"shippingAddress\": \"Street City State 1234\",\r\n    \"orderItems\": [\r\n        {\r\n            \"productId\": \"{{newProductId1}}\",\r\n            \"Quantity\": 5\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:49834/orders/create",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "49834",
											"path": [
												"orders",
												"create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Order - 1 - Admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "UserId",
												"value": "{{AdminIdForAuthorization}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://localhost:49834/orders/{{newOrderId1}}/",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "49834",
											"path": [
												"orders",
												"{{newOrderId1}}",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Update - Delivered - Fail",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "UserId",
												"value": "{{AdminIdForAuthorization}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"orderStatus\": \"Delivered\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:49834/orders/{{newOrderId1}}/update",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "49834",
											"path": [
												"orders",
												"{{newOrderId1}}",
												"update"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update - Processing",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "UserId",
												"value": "{{AdminIdForAuthorization}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"orderStatus\": \"Processing\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:49834/orders/{{newOrderId1}}/update",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "49834",
											"path": [
												"orders",
												"{{newOrderId1}}",
												"update"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update - Shipped",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "UserId",
												"value": "{{AdminIdForAuthorization}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"orderStatus\": \"Shipped\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:49834/orders/{{newOrderId1}}/update",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "49834",
											"path": [
												"orders",
												"{{newOrderId1}}",
												"update"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update - Delivered",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "UserId",
												"value": "{{AdminIdForAuthorization}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"orderStatus\": \"Delivered\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:49834/orders/{{newOrderId1}}/update",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "49834",
											"path": [
												"orders",
												"{{newOrderId1}}",
												"update"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update - ReturnRequested - Customer",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "UserId",
												"value": "{{newCustomerId1}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"orderStatus\": \"ReturnRequested\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:49834/orders/{{newOrderId1}}/update",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "49834",
											"path": [
												"orders",
												"{{newOrderId1}}",
												"update"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update - Returned",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "UserId",
												"value": "{{AdminIdForAuthorization}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"orderStatus\": \"Returned\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:49834/orders/{{newOrderId1}}/update",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "49834",
											"path": [
												"orders",
												"{{newOrderId1}}",
												"update"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Order - 1 - Customer",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "UserId",
												"value": "{{newCustomerId1}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://localhost:49834/orders/{{newOrderId1}}/",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "49834",
											"path": [
												"orders",
												"{{newOrderId1}}",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "ListAllOrdersForCusotmer1 - Admin",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "UserId",
												"value": "{{AdminIdForAuthorization}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://localhost:49834/orders/list/{{newCustomerId1}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "49834",
											"path": [
												"orders",
												"list",
												"{{newCustomerId1}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "ListAllOrdersForCusotmer1 - Customer",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "UserId",
												"value": "{{newCustomerId1}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://localhost:49834/orders/list/{{newCustomerId1}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "49834",
											"path": [
												"orders",
												"list",
												"{{newCustomerId1}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Order2",
							"item": [
								{
									"name": "Place Order - 2 - Customer1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseData = pm.response.json();\r",
													"pm.globals.set(\"newOrderId2\", responseData.orderId);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"customerName\": \"Vishal123\",\r\n    \"customerAddress\": \"Street City State 1234\",\r\n    \"customerEmail\": \"vishal123@company123.com\",\r\n    \"shippingAddress\": \"Street City State 1234\",\r\n    \"orderItems\": [\r\n        {\r\n            \"productId\": \"{{newProductId2}}\",\r\n            \"Quantity\": 5\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:49834/orders/create",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "49834",
											"path": [
												"orders",
												"create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Order - 2 - By Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseData = pm.response.json();\r",
													"pm.globals.set(\"newOrderId2\", responseData.orderId);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:49834/orders/{{newOrderId2}}/",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "49834",
											"path": [
												"orders",
												"{{newOrderId2}}",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Order3",
							"item": [
								{
									"name": "Place Order - 3 - Multiple Products - New Customer",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseData = pm.response.json();\r",
													"pm.globals.set(\"newOrderId3\", responseData.orderId);\r",
													"pm.globals.set(\"newRandomCustomerId\", responseData.customerId)\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"customerName\": \"{{$randomFirstName}}\",\r\n    \"customerAddress\": \"{{$randomStreetAddress}} {{$randomCity}}\",\r\n    \"customerEmail\": \"{{$randomEmail}}\",\r\n    \"shippingAddress\": \"{{$randomStreetAddress}} {{$randomCity}}\",\r\n    \"orderItems\": [\r\n        {\r\n            \"productId\": \"{{newProductId1}}\",\r\n            \"Quantity\": 5\r\n        },\r\n        {\r\n            \"productId\": \"{{newProductId2}}\",\r\n            \"Quantity\": 2\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:49834/orders/create",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "49834",
											"path": [
												"orders",
												"create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Order - 3 - Admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "UserId",
												"value": "{{AdminIdForAuthorization}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://localhost:49834/orders/{{newOrderId1}}/",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "49834",
											"path": [
												"orders",
												"{{newOrderId1}}",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Order - 1 - Different Customer - Fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "UserId",
												"value": "{{newRandomCustomerId}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://localhost:49834/orders/{{newOrderId1}}/",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "49834",
											"path": [
												"orders",
												"{{newOrderId1}}",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "ListAllOrdersForCusotmer1 - DiffCustomer Fail",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "UserId",
												"value": "{{newRandomCustomerId}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://localhost:49834/orders/list/{{newCustomerId1}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "49834",
											"path": [
												"orders",
												"list",
												"{{newCustomerId1}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "List All Orders - Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "UserId",
										"value": "{{AdminIdForAuthorization}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:49834/orders/list",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "49834",
									"path": [
										"orders",
										"list"
									]
								}
							},
							"response": []
						},
						{
							"name": "List All Orders - Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "UserId",
										"value": "{{newCustomerId1}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:49834/orders/list",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "49834",
									"path": [
										"orders",
										"list"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}